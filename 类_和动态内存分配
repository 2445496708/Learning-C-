特殊成员函数
    如果没有定义，C++自动提供：
     默认构造函数
     默认析构函数
     复制构造函数：浅复制（逐个复制非静态成员）
     赋值运算符
     地址运算符
     *移动构造函数 *移动赋值运算符
    默认赋值与复制函数的问题：析构函数会两次释放同一个内存，引发问题

构造函数时注意与析构函数的兼容：
 如str = new char[1] 和 str = new char 内存量相同，但
 前者与 delete [] str;兼容而后者不兼容
 
静态类成员函数，只能使用静态数据成员
    静态量为常量或枚举时，可以在声明中初始化

重载operator时，应先释原对象的内存

关键字nullptr比NULL更好，指出只是一个空指针

返回对象：
    返回指向const对像的引用（函数返回传给它的对象，可以通过返回引用提高效率，直接返回对象会调用复制构造函数）
    返回指向非const对象的引用（重载运算符，或重载与cout一起使用的<<,后者是必须的，因为ostream没有公用的复制构造函数）
    返回对象，特别是用new申请的局部变量，返回时，就被析构函数释放内存了，返回地址会出错，所有必须返回对象
    返回const对象，防止误用

使用指向对象的指针

成员初始化列表语法
     Classy::Classy(int n, int m) :mem1(n), mem2(0), mem3(n*m + 2)
     {
     //...
     }
     只能用于构造函数，必须用这种格式来初始化引用数据成员
    
    
